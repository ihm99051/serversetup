https://doub.io/ss-jc42/
https://marshal.ohtly.com/2016/12/28/install-shadowsocks-on-ubuntu-16-04-server/

http://lonf.me/2017/01/06/macOS-shadowsocks-Proxy-SwitchyOmega/

------------------------------------------------------------------------
SSServer on MacOS

sudo easy_install pip
sudo pip install shadowsocks

sudo vi /etc/shadowsocks.json

{
    "server":"0.0.0.0",
    "server_port":8388,
    "local_address": "127.0.0.1",
    "local_port":1080,
    "password":"4pple!D",
    "timeout":300,
    "method":"aes-256-cfb",
    "fast_open": false,
    "workers": 1
}


sudo ssserver -c /etc/shadowsocks.json start

------------------------------------------------------------------------
Put 2 files in Public Library
------------------------------------------------------------------------


sudo vi /Library/LaunchDaemons/org.ssserver.startup.plist
------------------------------------------------------------------------

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>             <string>org.ssserver.startup</string>
    <key>Disabled</key>          <false/>
    <key>RunAtLoad</key>         <true/>
    <key>KeepAlive</key>         <true/>
    <key>LaunchOnlyOnce</key>    <true/>
    <key>ProgramArguments</key>
        <array>
            <string>/Library/LaunchDaemons/ssserver.sh</string>
        </array>
</dict>
</plist>
------------------------------------------------------------------------


sudo vi /Library/LaunchDaemons/ssserver.sh

------------------------------------------------------------------------
#!/bin/bash

echo Try to start Shadowsocks

/usr/local/bin/ssserver -c /etc/shadowsocks.json
------------------------------------------------------------------------

sudo chmod 700 /Library/LaunchDaemons/ssserver.sh

------------------------------------------------------------------------------------------------------------------------------------------------

DuckDNS

osx
if you are not familiar with using the terminal on OSX consider using the JAR file (from the windows-gui) from http://www.etx.ca/

osx (10.8 or older) by default does have cron installed,
when you open the crontab, a new crontab will be setup for your user
lets get started and make a directory to put your files in, move into it and make our main script
these instructions are for the user administrator change the paths to match your user
open a new terminal, it will be in your home directory

mkdir duckdns
cd duckdns
vi duck.sh

now copy this text and put it into the file (in vi you hit the i key to insert, ESC then u to undo)	The example below is for the domain hui
if you want the configuration for a different domain, use the drop down box above
you can pass a comma separated (no spaces) list of domains
you can if you need to hard code an IP (best not to - leave it blank and we detect your remote ip)
hit ESC then use use arrow keys to move the cursor x deletes, i puts you back into insert mode

echo url="https://www.duckdns.org/update?domains=hui&token=028f06f0-4c01-49df-9500-c760ba9d2235&ip=" | curl -k -o /Users/administrator/duckdns/duck.log -K -

now save the file (in vi hit ESC then :wq! then ENTER)
this script will make a https request and log the output in the file duck.log
now make the duck.sh file executeable

chmod 700 duck.sh

next we will be using the cron process to make the script get run every 5 minutes

crontab -e

copy this text and paste it at the bottom of the crontab

*/5 * * * * /Users/administrator/duckdns/duck.sh >/dev/null 2>&1

now save the file (CTRL+o then CTRL+x)

lets test the script

./duck.sh

this should simply return to a prompt
we can also see if the last attempt was successful (OK or bad KO)

cat duck.log

if it is KO check your Token and Domain are correct in the duck.sh script

------------------------------------------------------------------------------------------------------------------------------------------------


https://doub.io/ss-jc42/
https://marshal.ohtly.com/2016/12/28/install-shadowsocks-on-ubuntu-16-04-server/
https://linghucong.js.org/2016/04/20/setup-Shadowsocks-on-ubuntu-1604/

http://service.oray.com/question/4287.html
http://service.oray.com/question/1890.html

https://bill.tt/2017/01/14/Ubuntu-16-04-配置L2TP-VPN-Server/

sudo apt install speedtest-cli
speedtest-cli

My EC2 VM instance is physically hosted in the US East (Northern Virginia) Region, and I would like to determine what kind of network performance it will achieve when it utilizes one of the Speedtest.net hosts back here in Seattle, WA. The following command will display a list of Speedtest.net servers sorted by distance and filtered by the seattle string.
$ speedtest-cli --list | grep -i seattle
1074) Towerstream (Seattle, WA, United States) [3694.99 km]
2523) Wowrack.com (Seattle, WA, United States) [3694.99 km]
1423) Condointernet.net (Seattle, WA, United States) [3694.99 km]
2965) FiberCloud, Inc (Seattle, WA, United States) [3694.99 km]

I'm interested in the FiberCloud, Inc host for my target, so I will apply the server ID number to the server parameter value. I would also like to generate a graphical image of my test run result with the share option. Run the following command:
$ speedtest-cli --server 2965 --share
Retrieving speedtest.net configuration...
Retrieving speedtest.net server list...
Testing from Amazon.com (x.x.x.x)...
Hosted by FiberCloud, Inc (Seattle, WA) [3694.99 km]: 61.671 ms
Testing download speed........................................
Download: 88.94 Mbit/s
Testing upload speed..................................................
Upload: 30.14 Mbit/s
Share results: http://www.speedtest.net/result/2583822707.png
